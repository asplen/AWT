*******************************************************************************
JTable
_______________________________________

Компонент JTable отображает строки и колонки данных.

Перетаскивая границы колонок с помощью мыши, можно изменять их размеры.

Допускается также перетаскивать целую колонку на новое место. В зависимости от
конфигурации можно выбирать строку, колонку или ячейку в таблице и модифицировать
данные в ячейке.

JTable - сложный компонент, предлагающий
намного больше возможностей, чем можно здесь обсудить.
(Вероятно, это самый сложный компонент Swing.)
Однако стандартная конфигурация JTable
все же обеспечивает солидную функциональность, которой легко пользоваться,
особенно если просто нужно отображать данные в табличном формате.

Предлагаемый здесь краткий обзор дает общее представление о таком мощном компоненте.
Как и JTree, класс JTable имеет множество связанных с ним классов и
интерфейсов. Они находятся в пакете javax.swing.table.

Концептуально компонент JTable довольно прост.
Он состоит из одного или нескольких колонок информации. В верхней части каждой колонки
имеется заголовок. Вдобавок к описанию данных в колонке заголовок также
предлагает механизм, с помощью которого пользователь может изменять размер колонки
либо ее расположение в таблице. Компонент JTable не предоставляет никаких собственных
возможностей прокрутки, поэтому он обычно
заключается в JScrollPane.
В классе JTable определено несколько конструкторов и вот тот, который
применяется здесь:

JTable ( Object [] [] data, Object[] colHeads )

В data указывается двумерный массив представляемой информации, а в
colHeads - одномерный массив с заголовками колонок.

Класс JTable опирается на три модели.

Первая - табличная модель, которая определяется интерфейсом TableModel и отвечает за то,
что связано с отображением данных в двумерном формате.

Вторая - модель колонки таблицы, которая представлена интерфейсом TableColurnnModel.
С учетом того, что компонент JTable определяется в терминах колонок,
именно TableColurnnModel устанавливает характеристики колонки.
Первые две модели упакованы в javax.swing.tаЫе.

Третья модель определяет, каким образом выбираются элементы, и она указана посредством интерфейса
ListSelectionModel, который был описан при обсуждении JList.

Компонент JTable способен генерировать несколько событий.
Двумя наиболее важными для работы с таблицей являются ListSelectionEvent и
TableModelEvent.

Событие ListSelectionEvent генерируется, когда пользователь выбирает что-то в таблице.
По умолчанию компонент JTable позволяет выбирать одну или несколько полных строк. Такое поведение можно
изменить, чтобы разрешить выбор одной или нескольких колонок, или одной или нескольких ячеек.

Событие TableModelEvent инициируется, когда
данные таблицы каким-либо образом изменяются. Обработка этих событий
требует немного больше работы, чем обработка событий, генерируемых ранее описанными компонентами,
и выходит за рамки настоящей книги.

Тем не менее, если вы просто хотите использовать JTable для отображения данных
(как в следующем примере), то обрабатывать какие-либо события не придется.

Ниже перечислены шаги, необходимые для настройки простого компонента JTable,
который можно применять для отображения данных

1. Создать экземпляр JTable.
2. Создать экземпляр JScrollPane, указав таблицу в качестве прокручиваемого объекта.
3. Добавить панель прокрутки в панель содержимого.
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
В следующем примере показано, как создать и использовать простую
таблицу.
Для заголовков колонок создается одномерный массив строк
colHeads, а для ячеек - двумерный массив строк data. Легко заметить, что
каждый элемент массива представляет собой массив из трех строк. Массивы
data и colHeads передаются конструктору JTable.
Таблица добавляется в панель прокрутки, которая добавляется в панель содержимого.
В таблице отображаются данные из массива data. Стандартная конфигурация таблицы
также позволяет редактировать содержимое ячеек.
Изменения влияют на лежащий в основе массив, которым в данном случае является data.