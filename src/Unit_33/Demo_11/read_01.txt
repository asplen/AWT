*******************************************************************************
Деревья
_______________________________________

Дерево - это компонент, который обеспечивает иерархическое представление данных.
В таком представлении пользователь имеет возможность разворачивать или сворачивать отдельные поддеревья.
Деревья реализованы в Swing посредством класса JTree.

JTree(Object[] obj )
JTree(Vector<?> v)
JTree(TreeNode tn)

Первая форма строит дерево из элементов массива obj,
вторая форма - из элементов вектора v,
а третья форма - на основе корневого узла tn.

Хотя класс JTree расположен в пакете javax.swing, ero поддерживающие
классы и интерфейсы находятся в пакете javax.swing.tree. Причина в том,
что количество классов и интерфейсов, необходимых для поддержки JTree,
довольно велико.

Класс JTree полагается на две модели: TreeModel и TreeSelectionModel.
Компонент JTree генерирует множество событий, но к деревьям имеют отношение три события:
1) TreeExpansionEvent      2) TreeSelectionEvent      3) TreeModelEvent

Событие TreeExpansionEvent происходит, когда узел разворачивается или сворачивается.
Событие TreeSelectionEvent генерируется, когда пользователь выбирает или отменяет выбор узла в дереве.
Событие TreeModelEvent инициируется при изменении данных или структуры дерева.

Прослушивателями упомянутых событий являются соответственно
1)TreeExpansionListener     2) TreeSelectionListener  3) TreeModelListener.

Классы событий и интерфейсы прослушивателей для деревьев упакованы в javax.swing.event.

В рассматриваемом далее примере обрабатывается событие TreeSelectionEvent.
Для его прослушивания необходимо реализовать интерфейс TreeSelectionListener,
в котором определен только один метод по имени valueChanged(), который принимает
объект TreeSelectionEvent.
Получить путь к выбранному объекту можно, вызвав метод getPath() на
объекте события:

TreePath getPath ()

Он возвращает объект TreePath, описывающий путь к измененному узлу.

Класс TreePath инкапсулирует информацию о пути к определенному узлу в
дереве и предоставляет несколько конструкторов и методов.

В книге применяется только метод toString (), возвращающий строку с описанием пути.

В интерфейсе TreeNode объявлены методы, которые позволяют получить
информацию об узле дерева. Например, можно получить ссылку на родительский узел
или перечисление дочерних узлов. Интерфейс MutableTreeNode
расширяет TreeNode. В нем объявлены методы для вставки и удаления дочерних узлов
либо изменения родительского узла.

Класс DefaultMutableTreeNode реализует интерфейс MutableTreeNode и
представляет узел в дереве. Ниже показан один из его конструкторов:

DefaultMutableTreeNode (Object obj)

В obj передается объект, который должен быть заключен в этот узел дерева.
У нового узла дерева нет родителя или потомка.

Для создания иерархии узлов дерева предназначен метод add()  класса
DefaultMutableTreeNode со следующей сигнатурой:

void add (MutaЬleTreeNode child)

В child указывается изменяемый узел дерева, который должен быть добавлен в
качестве дочернего к текущему узлу.

Компонент JTree не предоставляет никаких собственных возможностей
прокрутки. Взамен JTree обычно помещается внутрь JScrollPane. Таким
образом, крупное дерево можно прокручивать в меньшем окне просмотра.

Использовать дерево можно с применением описанных далее шагов.
1.  Создать экземпляр JTree.
2.  Создать экземпляр JScrollPane и указать дерево в качестве объекта,
    подлежащего прокрутке.
3.  Добавить панель прокрутки в панель содержимого.

////////////////////////////////////////////////////////////////////////////////////
В приведенном ниже примере демонстрируется создание дерева и обработка выбора.
Сначала создается экземпляр DefaultMutableTreeNode с меткой "Options" (Параметры).
Он будет верхним узлом иерархии дерева. Затем
создаются дополнительные узлы дерева, которые с использованием метода
add () присоединяются к дереву. Конструктору JTree в качестве аргумента
передается ссылка на верхний узел дерева. Далее дерево предоставляется
в аргументе конструктору JScrollPane и созданная панель прокрутки добавляется в панель содержимого.
Наконец, создается метка, которая тоже
добавляется в панель содержимого.
В ней будет отображаться выбор, произведенный в дереве.
Чтобы получать события выбора в дереве, для дерева регистрируется прослушиватель TreeSelectionListener.
Внутри метода valueChanged () получается и отображается путь к текущему выбору.

public class JTreeDemo

