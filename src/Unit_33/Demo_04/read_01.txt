*******************************************************************************
2   JToggleButton
_______________________________________

Полезной разновидностью кнопки является переключатель, который выглядит подобно
кнопке, но действует по-другому, поскольку имеет два состояния:
нажато и отпущено.

После нажатия переключатель остается нажатым, а не отпускается,
как делает обычная кнопка. После повторного нажатия переключатель отпускается.

Таким образом, каждый раз, когда нажимается переключатель, он переключается
между двумя состояниями.

Переключатели - это объекты класса JToggleButton, реализующего AbstractButton.

Помимо создания стандартных переключателей класс
JToggleButton является суперклассом для двух других компонентов Swing,
которые тоже представляют элементы управления с двумя состояниями.

Речь идет о JCheckBox и JRadioButton, рассматриваемых позже в главе.

В JToggleButton определена базовая функциональность для всех
компонентов с двумя состояниями.

В JToggleButton определено несколько конструкторов, один из которых
применяется в приведенном ниже примере:

JToggleButton (String str)

Конструктор создает переключатель с текстом, переданным в str.
По умолчанию переключатель находится в выключенном состоянии.

Другие конструкторы позволяют создавать переключатели, содержащие изображения
либо изображения и текст.

В классе JToggleButton используется модель, определенная вложенным
классом по имени JToggleButton.ToggleButtonМodel.

Обычно для работы со стандартным переключателем напрямую взаимодействовать
с моделью не придется.

Как и JButton, компонент JToggleButton при каждом нажатии генерирует событие действия.

В отличие от JButton компонент JToggleButton также генерирует событие элемента,
потребляемое теми компонентами, которые поддерживают концепцию выбора.
Когда переключатель JToggleButton нажат, он выбирается, а когда отпущен - выбор отменяется.

Для обработки событий элементов необходимо реализовать интерфейс ItemListener.

Вспомните из главы 25, что каждый раз, когда генерируется событие элемента,
оно передается методу itemStateChanged (), определенному в ItemListener.

Внутри itemStateChanged () можно вызвать метод getItem () на объекте ItemEvent,
чтобы получить ссылку на экземпляр JToggleButton, сгенерировавший событие:

Object getItem ()

Метод возвращает ссылку на кнопку, которую придется привести к JToggleButton.

Самый простой способ определить состояние переключателя - вызвать
метод isSelected () (унаследованный из AbstractButton) на кнопке, сгенерировавшей событие:

boolean isSelected()

Он возвращает true, если кнопка выбрана, или false в противном случае.

Далее показан пример применения переключателя.
*JToggleButtonDemo
Обратите внимание на то, как работает "прослушиватель" событий элементов.
Он просто вызывает метод isSelected () для определения состояния кнопки.