*******************************************************************************
4   JRadioButton
_______________________________________
В группе взаимоисключающих переключателей одновременно может быть
выбрана только одна кнопка.

Они поддерживаются классом JRadioButton, который расширяет класс JToggleButton.

В классе JRadioButton определено несколько конструкторов и вот тот, что используется в примере:

JRadioButton (String str)

В str указывается метка для кнопки.

Другие конструкторы позволяют задавать начальное состояние выбора кнопки и значок.

Для активизации взаимоисключающей природы переключатели должны
быть объединены в группу, где в любой момент времени можно выбрать только одну кнопку.
Например, если пользователь нажимает переключатель, который находится в группе,
то любой ранее выбранный переключатель в этой группе автоматически перестает
быть выбранным.

Группа переключателей создается классом ButtonGroup за счет вызова его стандартного конструк
void add (AbstractButton ab) ;

В аЬ передается ссылка на кнопку, которая должна быть добавлена в группу.

Компонент JRadioButton генерирует события действий, события элементов и события
изменений каждый раз, когда изменяется выбор кнопки.

Чаще всего обрабатывается событие действия, т.е. обычно будет реализовываться
интерфейс ActionListener. Вспомните, что в ActionListener определен единственный
метод actionPerformed ().

Внутри него доступно несколько способов для выяснения, какая кнопка была выбрана.
Во-первых, можно проверить его команду действия, вызвав getActionCommand ().
По умолчанию команда действия совпадает с меткой кнопки, но посредством вызова
setActionCommand () на переключателе легко установить другую команду
действия.
Во-вторых, можно вызвать getSource () на объекте ActionEvent и
сравнить полученную ссылку с кнопками.
В-третьих, можно проверить каждый переключатель, чтобы узнать, какой из них
выбран в данный момент, вызвав isSelected () на каждой кнопке.

Наконец, в каждой кнопке может применяться собственный обработчик событий действий,
реализованный либо в виде анонимного внутреннего класса, либо в виде лямбда-выражения.

Не забывайте, что каждый раз, когда происходит событие действия, это означает,
что выбранная кнопка изменилась и будет выбрана только одна кнопка.

В показанном ниже примере демонстрируется использование взаимоисключающих переключателей.
*JRadioButtonDemo
Сначала создаются три переключателя, после чего они добавляются в группу.
Как объяснялось ранее, это необходимо, чтобы активизировать их взаимоисключающее
поведение. Нажатие переключателя генерирует событие действия, которое обрабатывается
actionPerformed ().
В данном обработчике с помощью метода getActionCommand () получается
ассоциированный с переключателем текст, который применяется для установки текста внутри метки.
