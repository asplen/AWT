**************************************************************
Диалоговые окна
--------------------------------------------------------------

Часто возникает необходимость в размещении набора связанных
элементов управления внутри диалогового окна.

Диалоговые окна применяются главным образом для ввода данных
пользователем и нередко являются дочерними
в отношении окна верхнего уровня.

Диалоговые окна не имеют панелей меню,
но в остальном они функционируют как фреймовые окна.

(Скажем, элементы управления добавляются к ним аналогично
добавлению элементов управления во фреймовые окна.)

Диалоговые окна могут быть модальными или немодальными.

Когда модальное диалоговое окно активно, получить доступ
к другим окнам в программе (за исключением дочерних окон диалогового
окна) не удастся, пока это диалоговое окно не будет закрыто.

Когда немодальное диалоговое окно активно, фокус ввода может
быть перемещен в другое окно программы, а потому другие части
программы остаются активными и доступными.

Начиная с версии JDK 6, модальные диалоговые окна можно
создавать с тремя различными типами модальности, которые определены в
перечислении Dialog.ModalityType. По умолчанию принимается вариант
APPLICATION_MODAL, предотвращающий использование других окон верхнего
уровня в приложении.

Он представляет собой традиционный тип модальности.

Другие типы модальности - DOCUMENT_MODAL и TOOLKIТ_MODAL. Также
предусмотрен тип MODELESS.
--------------------------------------------------------------
Dialog (Frame parentWindow, boolean mode )
Dialog (Frame parentWindow, String title, boolean mode )

parentWindow        указывается владелец диалогового окна
Если mode имеет значение true, тогда диалоговое окно использует
стандартный тип модальности, а если false, то диалоговое окно будет немодальным.

В title можно передать заголовок диалогового окна. В общем случае создается подкласс
Dialog, к которому добавляется функциональность, необходимая приложению.

--------------------------------------------------------------

