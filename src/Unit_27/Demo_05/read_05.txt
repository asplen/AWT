**************************************************************
Использование списков
--------------------------------------------------------------
Класс List предоставляет компактный прокручиваемый список с
множественным выбором. В отличие от объекта Choice, который показывает
только один выбранный пункт в меню, объект List способен отображать любое
количество вариантов выбора в видимом окне. Его также можно создать так,
чтобы сделать возможным множественный выбор.

1   List() throws HeadlessException
2   List(int numRows) throws HeadlessException
3   List(int numRows, boolean multipleSelect) throws HeadlessException

1   создает элемент управления List, который позволяет выбирать только
    один элемент в любой момент времени.
2   значение numRows указывает количество записей в списке, которые
    будут всегда видны (другие можно прокручивать по мере необходимости).
3   если MultipleSelect имеет значение true,
    то пользователь может выбрать два или более элементов одновременно.
    Если оно равно false, тогда может быть выбран только один элемент.
--------------------------------------------------------------
    void add (String name)                      добавляет элементы в конец списка
    void add (String name, int index)           добавляет элемент по индексу, заданному в index
                                                Чтобы добавить элемент в конец списка, необходимо указать -1.
В name указывается имя элемента, добавляемого в список
--------------------------------------------------------------
String getSelectedItem()    возвращает строку, содержащую имя элемента.
                            Если выбрано более одного элемента или выбор
                            еще не сделан, тогда возвращается null.
int getSelectedItem()       возвращает индекс элемента.
                            Первый элемент имеет индекс О. Если выбрано более одного элемента или
                            выбор еще не сделан, то возвращается - 1.
--------------------------------------------------------------
String [] getSelectedItem()     возвращает массив, содержащий имена выбранных в текущий момент элементов.
int [] getSelectedIndexes()     возвращает массив с индексами выбранных в данный момент элементов.
--------------------------------------------------------------
int getItemCount()              Для получения количества элементов в списке
void select(int index)          Установить текущий выбранный элемент
--------------------------------------------------------------
Имея индекс, можно получить имя, ассоциированное с элементом по этому индексу,
с помощью метода getItem(), который имеет следующую общую форму:

String getItem ( i nt index )   В index указывается индекс желаемого элемента.

**************************************************************
Обработка событий для списков       ActionListener
--------------------------------------------------------------

Для обработки событий списка потребуется реализовать интерфейс
ActionListener.
Каждый раз, когда происходит двойной щелчок на элементе списка,
генерируется объект ActionEvent, метод getActionCommand()
которого можно использовать для получения имени нового выбранного
элемента.
Кроме того, когда элемент выбирается или его выбор отменяется
посредством одиночного щелчка, генерируется объект ItemEvent, метод
getStateChange() которого можно применять с целью выяснения, что
вызвало это событие - выбор или отмена выбора. Метод getItemSelectable()
возвращает ссылку на объект, инициировавший событие.
