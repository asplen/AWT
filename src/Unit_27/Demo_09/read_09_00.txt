**************************************************************
Понятие диспетчеров компоновки
--------------------------------------------------------------
Все представленные до сих пор компоненты позиционировались с
помощью диспетчера поточной компоновки (FlowLayout). Как упоминалось
в начале главы, диспетчер компоновки автоматически размещает элементы
управления в окне согласно определенному алгоритму. Хотя элементы
управления Java можно размещать вручную, обычно так не поступают по двум
главным причинам. Во-первых, позиционировать большое количество
компонентов вручную крайне утомительно. Во-вторых, иногда при размещении
какого-то элемента управления информация о ширине и высоте еще
недоступна, поскольку инструментальные компоненты платформы пока не
готовы. В такой ситуации довольно сложно понять, когда размеры заданного
компонента можно применять для его позиционирования относительно другого.

С каждым объектом Container связан диспетчер компоновки,
который представляет собой экземпляр любого класса, реализующего
интерфейс LayoutManager. Диспетчер компоновки задается посредством метода
setLayout(). Если вызов setLayout () не делался, тогда используется
стандартный диспетчер компоновки. При каждом изменении размеров
контейнера (либо при их первоначальной установке) диспетчер компоновки
применяется для позиционирования всех компонентов внутри него.

void setLayout ( LayoutManager layoutObj)

В layoutObj передается ссылка на нужный диспетчер компоновки. Если
диспетчер компоновки необходимо отключить и позиционировать
компоненты вручную, тогда в layoutObj понадобится передать null. В таком случае
придется самостоятельно определять форму и местоположение каждого
компонента с использованием метода setBounds (), определенного в Component.
Обычно удобнее применять диспетчер компоновки.
--------------------------------------------------------------
Все диспетчеры компоновки отслеживает список компонентов, которые
хранятся по своим именам. Диспетчер компоновки уведомляется при
каждом добавлении компонента в контейнер. Всякий раз, когда размер
контейнера нужно изменить, к диспетчеру компоновки обращаются через его методы
minimumLayoutSize() и preferredLayoutSize().
--------------------------------------------------------------
Каждый компонент, управляемый диспетчером компоновки, содержит методы getPreferredSize () и
getMinimumSize (), которые возвращают предпочтительный и минимальный
размеры, необходимые для отображения каждого компонента. Диспетчер
компоновки по возможности будет удовлетворять такие запросы, сохраняя
целостность политики компоновки. Упомянутые методы можно
переопределять в подклассах, создаваемых для элементов управления,
иначе будут предоставляться стандартные значения.
--------------------------------------------------------------
В Java есть несколько предопределенных классов LayoutManager.
Можно использовать тот диспетчер компоновки, который
лучше всего подходит для разрабатываемого приложения.
