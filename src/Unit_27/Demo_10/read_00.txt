**************************************************************
Меню и панели меню
--------------------------------------------------------------
Окно верхнего уровня может иметь ассоциированную с ним панель меню,
которая отображает список пунктов меню верхнего уровня. С каждым
пунктом связано раскрывающееся меню. Такая концепция реализована в AWT
классами:
MenuBar,
Menu,
MenuItem.

Обычно панель меню содержит один
или несколько объектов Menu, каждый из которых включает список объектов
MenuItem. Каждый объект MenuItem представляет то, что может быть
выбрано пользователем. Поскольку Menu является подклассом Menuitem,
можно создать иерархию вложенных подменю. Кроме того, с помощью класса
CheckboxMenuitem можно предусмотреть переключаемые пункты меню, при
выборе которых рядом появляется галочка.

Для создания панели меню сначала понадобится создать экземпляр класса
MenuBar, в котором определен только стандартный конструктор.
Затем необходимо создать экземпляры Menu, которые будут определять выбор,
отображаемый в панели меню.

1   Menu () throws HeadlessException
2   Menu (String optionName ) throws HeadlessException
3   Menu(String optionName, boolean removable) throws HeadlessException

optionName      указывается имя пункта меню
removable       если значение true, тогда меню можно удалять и переводить
                в плавающий режим. Иначе - меню останется прикрепленным к панели
                меню.
--------------------------------------------------------------
Отдельные пункты меню относятся к классу MenuItem, в котором определены следующие конструкторы:

MenuItem() throws HeadlessException
MenuItem (String itemName) throws HeadlessException
MenuItem (String itemName, MenuShortcut keyAccel) throws HeadlessException

itemName        передается имя, отображаемое в меню
keyAccel        клавиша быстрого доступа к данному пункту меню
--------------------------------------------------------------
void setEnabled(boolean enaЬledFlag)    //отключать(false) и включить(true) Пункт меню
boolean isEnabled()                     //выяснить  Состояние пункта меню
void setLabel (String newName)          //позволяет изменить имя пункта меню
String getLabel ()                      //получить текущее имя пункта меню
--------------------------------------------------------------
Создать переключаемый пункт меню можно с использованием подкласса
Menuitem по имени CheckboxMenuItem:

CheckboxMenuItem () throws HeadlessException
CheckboxMenuItem (String itemName) throws HeadlessException
CheckboxMenuItem (String itemName, boolean on ) throws HeadlessException

itemName        передается имя пункта, отображаемого в меню

Переключаемый пункт меню работает как тумблер.
Каждый раз, когда он выбирается, его состояние изменяется.
В первых двух формах конструкторов переключаемый
пункт меню не отмечен. В третьей форме, если on равно true, тогда
переключаемый пункт меню изначально отмечен, а если false, то нет

--------------------------------------------------------------

boolean getState ()                 //Получить состояние переключаемого пункта меню
void setState ( boolean checked)    //установить его в известное состояние (отметить-true)
MenuItem add (MenuItem item)        //добавить в объект Menu Созданный пункт меню
Menu add (Menu menu )               //В menu передается добавляемое меню. Метод возвращает menu.
--------------------------------------------------------------
Меню генерируют события только при выборе элемента типа MenuItem
или CheckboxMenuItem. В случае доступа к панели меню, скажем, для
отображения раскрывающегося меню, события не генерируются. Каждый раз,
когда выбирается пункт меню, создается объект ActionEvent.

По умолчанию строкой с командой действия будет имя пункта меню, но можно
указать другую строку с командой действия, вызвав метод setActionCommand()
на пункте меню. При отметке или снятии отметки с переключаемого пункта
меню создается объект ItemEvent. Таким образом, для обработки этих
событий меню должны быть реализованы интерфейсы ActionListener и/или
ItemListener.
--------------------------------------------------------------
Object getItem ()       // возвращает ссылку на элемент, сгенерировавший данное событие

Существует еще один класс, связанный с меню, который может
показаться интересным: PopupMenu.
Он работает аналогично классу Menu, но создает
меню, которое может отображаться в определенном месте. Класс PopupMenu
предлагает гибкую и полезную альтернативу для организации некоторых
типов меню.

