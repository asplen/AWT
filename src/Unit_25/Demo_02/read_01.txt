*******************************************************************************
Обработка событий клавиатуры
_________________________________________________________________________
Для обработки событий клавиатуры используется та же общая архитектура, что и в
примере с событиями мыши в предыдущем разделе.

Конечно, отличие в том, что будет реализован интерфейс KeyListener.

Прежде чем заняться примером, полезно выяснить, как генерируются основные события.

При нажатии клавиши генерируется событие КEY_PRESSED,
которое приводит к вызову обработчика события keyPressed ().

При отпускании клавиши генерируется событие КЕУ_RELEASED и запускается обработчик keyReleased ().

Если в результате нажатия клавиши вводится символ, тогда отправляется событие KEY_TYPED
и вызывается обработчик keyTyped ().

Таким образом, каждый раз, когда пользователь нажимает клавишу, генерируются как минимум два,
а зачастую и три события.

Если вас интересуют лишь реальные символы, то можете игнорировать информацию,
передаваемую событиями нажатия и отпускания клавиши.

Тем не менее,
если программа должна обрабатывать специальные клавиши вроде клавиш
со стрелками или функциональных клавиш, тогда придется отслеживать их с
помощью обработчика keyPressed ().

В показанной далее программе
SimpleKey
демонстрируется ввод с клавиатуры.
В окне отображаются результаты нажатых клавиш вместе с их состоянием.

*******************************************************************************
Если нужно обрабатывать специальные клавиши вроде клавиш со стрелками или функциональные клавиши,
тогда реагировать на них придется в обработчике keyPressed ().

В keyТyped () они недоступны. Для идентификации клавиш применяются коды виртуальных клавиш.
*******************************************************************************

Скажем, приведенная ниже программа
KeyEventsDemo

выводит названия нескольких специальных клавиш:
Процедуры из предыдущих примеров обработки событий клавиатуры и
мыши можно обобщить для любоо вида обработки событий, включая события,
которые генерируются элементами управления.
В последующих главах
вы встретите мноrо примеров обработки других типов событий, но все они
будут иметь такую же базовую структуру, как в только что описанных программах.



