*******************************************************************************
Интepфeйc ActionListener
_________________________________________________________________________
В интерфейсе ActionListener определен метод actionPerforme (),
который вызывается при возникновении события действия.
Вот его общая форма:

void actionPerforrned (ActionEvent ае)
*******************************************************************************
Интepфeйc AdjustmentListener
В интерфейсе AdjustmentListener определен метод adjustmentValue Changed ( ) ,
который вызывается при возникновении события корректировки.
Ниже показана его общая форма:

void adj ustrnentValueChanged ( Adj ustrnentEvent ае)
*******************************************************************************
Интepфeйc ComponentListener
_________________________________________________________________________
 В интерфейсе ComponentListener определены четыре метода, которые
вызываются, когда компонент изменяет размер, перемещается, показывается
или скрывается. Их общие формы выглядят следующим образом:

void componentResized ( ComponentEvent се)
void componentMoved ( ComponentEvent се)
void componentShown ( ComponentEvent се)
void componentHidden ( ComponentEvent се)
*******************************************************************************
Интepфeйc ContainerListener
_________________________________________________________________________
В интерфейсе ContainerListener определены два метода. Когда компонент
добавляется в контейнер, вызывается метод componentAdded(), а при
удалении компонента из контейнера вызывается componentRemoved(). Вот
их общие формы:

void componentAdded ( ContainerEvent се)
void componentRemoved ( ContainerEvent се)
*******************************************************************************
Интерфейс FocusListener
_________________________________________________________________________
В интерфейсе FocusLis tener определены два метода. Когда компонент
получает фокус ввода с клавиатуры, вызывается метод focusGained (),
а когда компонент утрачивает фокус - метод focusLost ().
Ниже приведены их общие формы:

void focusGained ( FocusEvent fe )
void focusLost ( FocusEvent fe)
*******************************************************************************
Интерфейс ItemListener
_________________________________________________________________________
В интерфейсе ItemListener определен метод itemStateChanged (), вызываемый
 при изменении состояния элемента, который имеет следующую общую форму:

void itemStateChanged ( ItemEvent ie)
*******************************************************************************
Интерфейс KeyListener
_________________________________________________________________________
В интерфейсе KeyListener определены три метода.
Методы keyPressed () и keyReleased () вызываются соответственно при нажатии и отпускании
клавиши. Метод keyTyped () вызывается в случае, если был введен символ.
Например, если пользователь нажимает и отпускает клавишу <А>, тогда
последовательно генерируются три события: нажатие клавиши, ввод
символа и отпускание клавиши. Если пользователь нажимает и отпускает клавишу
<Home>, то последовательно генерируются два ключевых события: нажатие
клавиши и отпускание клавиши.

Далее представлены общие формы упомянутых методов:

void keyPressed ( KeyEvent ke )
void keyReleased ( KeyEvent ke )
void keyTyped ( KeyEvent ke )
*******************************************************************************
Интерфейс MouseListener
_________________________________________________________________________
В интерфейсе MouseLi stener определены пять методов. Если кнопка
мыши нажата и отпущена в одной и той же точке, тогда вызывается метод
mouseClicked ().
Когда указатель мышь наводится на компонент,
вызывается метод mouseEntered (), а когда он покидает компонент, вызывается
mouseExited ().
Методы mousePressed () и mouseReleased () вызываются
при нажатии и отпускании кнопки мыши.

Вот общие формы этих методов:

void mouseClicked (MouseEvent me )
void mouseEntered ( MouseEvent me )
void mouseExited (MouseEvent me )
void mousePressed ( MouseEvent rne )
void mouseReleased (MouseEvent me )

*******************************************************************************
Интepфeйc MouseМotionListener
_________________________________________________________________________
В интерфейсе MouseMotionListener определены два метода. Метод
mouseDragged() вызывается множество раз во время перетаскивания
указателя мыши, а метод mouseMoved() - множество раз при перемещении мыши.
Ниже показаны их общие формы:

void mouse Dragged (MouseEvent me )
void mouseMoved (MouseEvent me )

*******************************************************************************
Интepфeйc MouseWheelListener
_________________________________________________________________________
В интерфейсе MouseWheelListener определен метод mouseWheelMoved(),
который вызывается при прокручивании колесика мыши:

void mouseWheelMoved (MouseWheelEvent mwe )
*******************************************************************************
Интерфейс TextListener
_________________________________________________________________________
В интерфейсе TextListener определен метод textValueChanged (),
который вызывается при внесении изменения в текстовую область или в
текстовое поле:

void textValueChanged ( TextEvent te )

*******************************************************************************
Интepфeйc WindowFocusListener
_________________________________________________________________________
В интерфейсе WindowFocusListener определены два метода: windowGainedFocus() и
windowLostFocus(). Они вызываются, когда окно получает или
теряет фокус ввода. Вот их общие формы:

void windowGai nedFocus (WindowEvent we )
void wi ndowLost Focus (WindowEvent we )

*******************************************************************************
Интepфeйc WindowListener
_________________________________________________________________________
В интерфейсе WindowListener определены семь методов. Методы
windowActivated () и windowDeactivated () вызываются, когда окно
становится или перестает быть активным.
Если окно сворачивается,
тогда вызывается метод windowIconified (), а если разворачивается - то метод
windowDeiconified ().
Когда окно открывается или закрывается, вызывается метод windowOpened ()
или windowClosed ().
Метод windowClosing() вызывается при закрытии окна.
Общие формы упомянутых методов выглядят
следующим образом:

void windowActivated (WindowEvent we)
void windowClosed (WindowEvent we)
void windowClosing (WindowEvent we )
void windowDeactivated (WindowEvent we )
void windowDeiconified (WindowEvent we )
void windowIconified (WindowEvent we )
void windowOpened (WindowEvent we )

