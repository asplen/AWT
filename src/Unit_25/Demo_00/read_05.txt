*******************************************************************************
Классы событий
_________________________________________________________________________

В основе механизма обработки событий Java лежат классы, представляющие
события.

Таким образом, обсуждение обработки событий следует начинать
с классов событий.

Тем не менее, важно понимать, что в Java определено
множество типов событий и в данной главе удастся обсудить далеко не
все классы событий.

Основное внимание в главе уделяется событиям из AWT,
большая часть которых применима и к Swing. Некоторые специфичные
для Swing события описаны в главе 32 при рассмотрении Swing.


В корне иерархии классов событий Java находится класс EventObject из
пакета jаvа.util.

Он является суперклассом для всех событий. Один его
конструктор показан ниже:

EventObject (Object src)


src     указывается объект, генерирующий событие.

В классе EventObject определены два метода:
getSource ()        возвращает источник события
toString ().        возвращает строковый эквивалент события

Класс AWTEvent, определенный в пакете java.awt,
представляет собой подкласс EventObject и
выступает в качестве суперкласса (прямо или косвенно) для всех событий,
основанных на AWT, которые используются моделью делегирования
обработки событий.

Метод getID () класса AWTEvent можно применять для определения типа
события, его сигнатура выглядит следующим образом:

int getID ()


Как правило, функциональные средства, определенные в классе AWTEvent,
не будут использоваться напрямую. Взамен будут применяться его подклассы.

На данный момент важно знать лишь то, что все остальные классы,
обсуждаемые в настоящем разделе, являются подклассами AWTEvent.

Подведем итоги:
• EventObject   суперкласс для всех событий;
• AWTEvent      суперкласс для всех событий AWT, обрабатываемых
                посредством модели делегирования обработки событий.

В пакете java.awt.event определено множество типов событий, которые
генерируются разнообразными элементами пользовательского интерфейса.
_________________________________________________________________________
ActionEvent         Генерируется при нажатии кнопки, двойном щелчке
                    на элементе списка или выборе пункта меню

AdjustmentEvent     Генерируется при манипулировании полосой прокрутки

ComponentEvent      Генерируется, когда компонент скрывается, перемещается,
                    изменяет размер или становится видимым.

ContainerEvent      Генерируется, когда компонент добавляется в контейнер
                    или удаляется из него.

FocusEvent          Генерируется, когда компонент получает или утрачивает
                    фокус ввода с клавиатуры

InputEvent          Абстрактный суперкласс для всех классов событий,
                    связанных с вводом в компонентах

ItemEvent           Генерируется, когда совершается щелчок на флажке
                    или элементе списка; также возникает при выборе
                    варианта либо выборе или отмене выбора отмечаемого
                    пункта меню

KeyEvent            Генерируется при получении ввода с клавиатуры

MouseEvent          Генерируется при перетаскивании и перемещении
                    указателя мыши, а также при щелчке, нажатии и
                    отпускании кнопок мыши; также возникает, когда
                    указатель мыши наводится на компонент или
                    покидает его

MouseWheelEvent     Генерируется при прокручивании колесика мыши

TextEvent           Генерируется при изменении значения в текстовой
                    области или текстовом поле

WindowEvent         Генерируется, когда окно становится активным,
                    закрывается, перестает быть активным,
                    разворачивается, сворачивается, открывается
                    или закрывается
_________________________________________________________________________

Вдобавок существует целочисленная константа ACTION _ PERFORМED, с помощью
которой можно идентифицировать события действий.

Класс ActionEvent имеет три конструктора:

1   ActionEvent(Object src, int type, String cmd)
2   ActionEvent(Object src, int type, String cmd, int modifiers)
3   ActionEvent(Object src, int type, String cmd, long when, int modifiers)

src         передается ссылка на объект, сгенерировавший событие
type        задается Тип события
cmd         строка команды
modifiers   какие модифицирующие клавиши (<Alt>, <Ctrl>, <Meta> и/или <Shift>) были
            нажаты, кода сгенерировалось событие.
when        когда произошло событие.
_________________________________________________________________________

Получить имя команды для вызывающего объекта ActionEvent можно
посредством метода:

String getActionCommand ()

Например, при щелчке на кнопке генерируется событие действия,
имя команды которого совпадает с меткой на этой кнопке.

Метод getModifiers ()   возвращает значение, которое отражает,
какие модифицирующие клавиши (<Alt>, <Ctrl>, <Meta> и/или <Shift>)
были нажаты во время генерации события:

int getModifiers ()

Метод getWhen () возвращает время, когда произошло событие, которое
называется отметкой времени события:

long getWhen ()

