*******************************************************************************
Компоненты и контейнеры
_______________________________________

Графический пользовательский интерфейс Swing состоит из двух ключевых элементов:
компонентов и контейнеров.

Однако различие в основном концептуальное, потому что все контейнеры тоже являются компонентами.

Разница между ними кроется в их предполагаемом назначении:
в широком смысле компонент представляет собой независимый визуальный элемент
управления, такой как кнопка или ползунок.
Контейнер содержит группу компонентов.
Следовательно, контейнер - это особый тип компонента, который
предназначен для хранения других компонентов.

Более того, чтобы компонент отображался, он должен находиться внутри контейнера.

Таким образом, все графические интерфейсы Swing будут иметь как минимум один контейнер.

Поскольку контейнеры относятся к компонентам, контейнер способен
также содержать другие контейнеры, позволяя инфраструктуре Swing определить то,
что называется иерархией включения, на вершине которой должен
быть контейнер верхнего уровня.

Давайте более подробно рассмотрим компоненты и контейнеры.
_______________________________________
Компоненты
_______________________________________
Как правило, компоненты Swing являются производными от класса
JComponent (за исключением четырех контейнеров верхнего уровня, описанных в следующем разделе.)

Класс JComponent обеспечивает функциональность, общую для всех компонентов.
Например, JComponent поддерживает подключаемый внешний вид.

Класс JComponent унаследован от классов Container и Component библиотеки AWT, т.е.
компонент Swing построен на основе компонента AWT и совместим с ним.

Все компоненты Swing представлены классами, определенными в пакете javax.swing.

Ниже перечислены имена классов для компонентов Swing
(в том числе и те, что используются в качестве контейнеров):

JApplet     (устаревший)
JButton
JCheckBox
JCheckBoxMenuItem
JColorChooser
JComboBox
JComponent
JDesktopPane
JDialog
JEditorPane
JFileChooser
JFormattedTextField
JFrame
JInternalFrame
JLabel
JLayer
JLayeredPane
JList
JMenu
JMenuBar
JMenuItem
JOptionPane
JPanel
JPasswordField
JPopupMenu
JProgressBar
JRadioButton
JRadioButtonMenuItem
JRootPane
JScrollBar
JScrollPane
JSeparator
JSlider
JSpinner
JSplitPane
JTabbedPane
JТаЫе
JTextArea
JTextField
JTextPane
JToggleButton
JToolBar
JToolTip
JTree
JViewport
JWindow

Обратите внимание, что имена всех классов компонентов начинаются с буквы J.
_______________________________________
Контейнеры
_______________________________________
В Swing определены два вида контейнеров.

Первый вид - контейнеры верхнего уровня: JFrame, JApplet, JWindow и JDialog.
Они не унаследованы от JComponent, но унаследованы от классов Component и Container
библиотеки AWT.

В отличие от других компонентов Swing, которые легковесны,
контейнеры верхнего уровня тяжеловесны.

В результате контейнеры верхнего уровня представляют собой особый случай
в библиотеке компонентов Swing.

Как следует из названия, контейнер верхнего уровня обязан находиться на
вершине иерархии включения.

Контейнер верхнего уровня не содержится в каком-то другом контейнере.

Более того, каждая иерархия включения должна
начинаться с контейнера верхнего уровня.

Чаще всего в приложениях применяется класс JFrame.

В прошлом для аплетов использовался класс JApplet.

Как объяснялось в главе 1, начиная с версии JDK 9, аплеты считаются нерекомендуемыми,
а теперь они стали устаревшими и подлежащими удалению.

Ко второму виду контейнеров, поддерживаемых Swing, относятся легковесные контейнеры,
которые унаследованы от JComponent.

Примером легковесного контейнера может служить JPanel - контейнер общего назначения.

Легковесные контейнеры часто применяются для организации и управления
группами связанных компонентов, поскольку такой контейнер может содержаться внутри другого контейнера.

Следовательно, легковесные контейнеры наподобие JPanel можно использовать для создания
подгрупп связанных элементов управления, содержащихся во внешнем контейнере.